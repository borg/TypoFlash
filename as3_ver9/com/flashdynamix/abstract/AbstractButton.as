package com.flashdynamix.abstract {	import flash.events.Event;	import flash.events.MouseEvent;		/**	 * @author FlashDynamix	 */	public class AbstractButton extends AbstractDisplay {		public var id : *;		public var value : *;		protected var _enabled : Boolean = true;		public function AbstractButton() {			super();						this.focusRect = false;			this.buttonMode = true;			this.mouseChildren = false;		}		override protected function added(event : Event) : void {			super.added(event);						addEvent(this, MouseEvent.MOUSE_DOWN, mouseDown);			addEvent(this, MouseEvent.MOUSE_UP, mouseUp);			addEvent(this, MouseEvent.MOUSE_OVER, mouseOver);			addEvent(this, MouseEvent.MOUSE_OUT, mouseOut);		}		override protected function removed(event : Event) : void {			removeEvent(this, MouseEvent.MOUSE_DOWN, mouseDown);			removeEvent(this, MouseEvent.MOUSE_UP, mouseUp);			removeEvent(this, MouseEvent.MOUSE_OVER, mouseOver);			removeEvent(this, MouseEvent.MOUSE_OUT, mouseOut);		}		public function set enabled(flag : Boolean) : void {			_enabled = flag;			this.buttonMode = this.mouseEnabled = flag;		}		public function get enabled() : Boolean {			return _enabled;		}		public function focus() : void {			stage.focus = this;		}		protected function mouseOver(event : MouseEvent) : void {		}		protected function mouseOut(event : MouseEvent) : void {		}		protected function mouseDown(event : MouseEvent) : void {		}		protected function mouseUp(event : MouseEvent) : void {		}	}}