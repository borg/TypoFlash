package com.flashdynamix.ui {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import com.flashdynamix.motion.Tweensy;	import com.flashdynamix.abstract.AbstractDisplay;	import com.flashdynamix.events.VolumeSliderEvent;		/**	 * @author FlashDynamix	 */	public class VolumeSlider extends AbstractDisplay {		public var bar : Sprite;		private var _position : Number = 1;		private var dragging : Boolean = false;		public function VolumeSlider() {			super();						this.focusRect = false;			this.buttonMode = true;			this.mouseChildren = false;						this.alpha = 0.2;		}		override protected function added(event : Event) : void {			super.added(event);						addEvent(this, MouseEvent.MOUSE_DOWN, mouseDown);			addEvent(this, MouseEvent.MOUSE_OVER, mouseOver);			addEvent(this, MouseEvent.MOUSE_OUT, mouseOut);		}		override protected function removed(event : Event) : void {			super.removed(event);						removeEvent(this, MouseEvent.MOUSE_DOWN, mouseDown);			removeEvent(this, MouseEvent.MOUSE_OVER, mouseOver);			removeEvent(this, MouseEvent.MOUSE_OUT, mouseOut);		}		public function set position(index : Number) : void {			_position = index;			bar.scaleX = _position;		}		public function get position() : Number {			return _position;		}		protected function mouseDown(event : MouseEvent) : void {			_position = Math.max(0, Math.min(1, mouseX / 22));			bar.scaleX = _position;						dragging = true;						addEvent(stage, MouseEvent.MOUSE_UP, mouseUp);			addEvent(stage, MouseEvent.MOUSE_MOVE, mouseMove);						dispatchEvent(new VolumeSliderEvent(VolumeSliderEvent.ON_CHANGE, _position));		}		protected function mouseOver(event : MouseEvent) : void {			Tweensy.to(this, {alpha:0.6});		}		protected function mouseOut(event : MouseEvent) : void {			if(dragging) return;						Tweensy.to(this, {alpha:0.2});		}		private function mouseMove(event : MouseEvent) : void {			_position = Math.max(0, Math.min(1, mouseX / 22));			bar.scaleX = _position;						dispatchEvent(new VolumeSliderEvent(VolumeSliderEvent.ON_CHANGE, _position));		}		protected function mouseUp(event : MouseEvent) : void {			removeEvent(stage, MouseEvent.MOUSE_UP, mouseUp);			removeEvent(stage, MouseEvent.MOUSE_MOVE, mouseMove);						dragging = false;						if(!this.hitTestPoint(stage.mouseX, stage.mouseY)) Tweensy.to(this, {alpha:0.2});		}	}}