package com.flashdynamix.abstract {	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.EventDispatcher;		/**	 * @author shanem	 */	public class AbstractDisplay extends Sprite {		protected var destroyed : Boolean = false;		public function AbstractDisplay() {			addEvent(this, Event.ADDED_TO_STAGE, added);			addEvent(this, Event.REMOVED_FROM_STAGE, removed);		}		protected function added(event : Event) : void {			addEvent(stage, Event.RESIZE, resize);			resize();		}		protected function removed(event : Event) : void {			removeEvent(stage, Event.RESIZE, resize);		}		protected function resize(event : Event = null) : void {		}		protected function get inDisplayList() : Boolean {			return (stage != null);		}		protected function removeIfContains(item : DisplayObject) : void {			if(contains(item)) removeChild(item);		}		protected function addEvent(item : EventDispatcher, type : String, listener : Function, unique : Boolean = false) : void {			if(unique && item.hasEventListener(type)) item.removeEventListener(type, listener);			item.addEventListener(type, listener, false, 0, true);		}		protected function removeEvent(item : EventDispatcher, type : String, listener : Function) : void {			item.removeEventListener(type, listener);		}		public function destroy() : void {			if(destroyed) return;						destroyed = true;		}	}}